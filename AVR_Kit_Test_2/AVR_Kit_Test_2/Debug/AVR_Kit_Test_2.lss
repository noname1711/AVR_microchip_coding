
AVR_Kit_Test_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000110  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000164  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000069f  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f3  00000000  00000000  000008af  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000301  00000000  00000000  00000ea2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  000011a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000320  00000000  00000000  00001208  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000b3  00000000  00000000  00001528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000015db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	55 00       	.word	0x0055	; ????
  56:	57 00       	.word	0x0057	; ????
  58:	59 00       	.word	0x0059	; ????
  5a:	5b 00       	.word	0x005b	; ????
  5c:	5d 00       	.word	0x005d	; ????
  5e:	5f 00       	.word	0x005f	; ????
  60:	61 00       	.word	0x0061	; ????
  62:	63 00       	.word	0x0063	; ????
  64:	66 00       	.word	0x0066	; ????
  66:	65 00       	.word	0x0065	; ????

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf e5       	ldi	r28, 0x5F	; 95
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <INIT>:
	mili_count = mili_count * FRE;

	// C√°c v√≤ng for g√¢y tr·ªÖ
	for(i = 0; i < mili_count; i++)
	for(j = 0; j < 53; j++);
}
  80:	81 b3       	in	r24, 0x11	; 17
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	81 bb       	out	0x11, r24	; 17
  86:	92 b3       	in	r25, 0x12	; 18
  88:	82 bb       	out	0x12, r24	; 18
  8a:	94 b3       	in	r25, 0x14	; 20
  8c:	84 bb       	out	0x14, r24	; 20
  8e:	95 b3       	in	r25, 0x15	; 21
  90:	85 bb       	out	0x15, r24	; 21
  92:	08 95       	ret

00000094 <LED7_OUT>:
  94:	25 b3       	in	r18, 0x15	; 21
  96:	28 70       	andi	r18, 0x08	; 8
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	8a 30       	cpi	r24, 0x0A	; 10
  9c:	91 05       	cpc	r25, r1
  9e:	b0 f4       	brcc	.+44     	; 0xcc <LED7_OUT+0x38>
  a0:	fc 01       	movw	r30, r24
  a2:	e6 5d       	subi	r30, 0xD6	; 214
  a4:	ff 4f       	sbci	r31, 0xFF	; 255
  a6:	0c 94 80 00 	jmp	0x100	; 0x100 <__tablejump2__>
  aa:	20 68       	ori	r18, 0x80	; 128
  ac:	0f c0       	rjmp	.+30     	; 0xcc <LED7_OUT+0x38>
  ae:	23 6e       	ori	r18, 0xE3	; 227
  b0:	0d c0       	rjmp	.+26     	; 0xcc <LED7_OUT+0x38>
  b2:	24 64       	ori	r18, 0x44	; 68
  b4:	0b c0       	rjmp	.+22     	; 0xcc <LED7_OUT+0x38>
  b6:	21 64       	ori	r18, 0x41	; 65
  b8:	09 c0       	rjmp	.+18     	; 0xcc <LED7_OUT+0x38>
  ba:	23 62       	ori	r18, 0x23	; 35
  bc:	07 c0       	rjmp	.+14     	; 0xcc <LED7_OUT+0x38>
  be:	21 61       	ori	r18, 0x11	; 17
  c0:	05 c0       	rjmp	.+10     	; 0xcc <LED7_OUT+0x38>
  c2:	20 61       	ori	r18, 0x10	; 16
  c4:	03 c0       	rjmp	.+6      	; 0xcc <LED7_OUT+0x38>
  c6:	23 6c       	ori	r18, 0xC3	; 195
  c8:	01 c0       	rjmp	.+2      	; 0xcc <LED7_OUT+0x38>
  ca:	21 60       	ori	r18, 0x01	; 1
  cc:	25 bb       	out	0x15, r18	; 21
  ce:	08 95       	ret

000000d0 <PORT>:
  d0:	c0 e0       	ldi	r28, 0x00	; 0
  d2:	df ef       	ldi	r29, 0xFF	; 255
  d4:	d2 bb       	out	0x12, r29	; 18
  d6:	dd 23       	and	r29, r29
  d8:	11 f0       	breq	.+4      	; 0xde <PORT+0xe>
  da:	dd 0f       	add	r29, r29
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <PORT+0x10>
  de:	df ef       	ldi	r29, 0xFF	; 255
  e0:	8c 2f       	mov	r24, r28
  e2:	0e 94 4a 00 	call	0x94	; 0x94 <LED7_OUT>
  e6:	95 b3       	in	r25, 0x15	; 21
  e8:	88 e0       	ldi	r24, 0x08	; 8
  ea:	89 27       	eor	r24, r25
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	cf 5f       	subi	r28, 0xFF	; 255
  f0:	ca 30       	cpi	r28, 0x0A	; 10
  f2:	80 f3       	brcs	.-32     	; 0xd4 <PORT+0x4>
  f4:	c0 e0       	ldi	r28, 0x00	; 0
  f6:	ee cf       	rjmp	.-36     	; 0xd4 <PORT+0x4>

000000f8 <main>:

// L?p trÏnh h‡m main()
int main()
{
	// G?i h‡m INIT() trong file thu_vien_rieng.h ?? kh?i t?o
	INIT();
  f8:	0e 94 40 00 	call	0x80	; 0x80 <INIT>

	// G?i h‡m PORT() trong file thu_vien_rieng.h ?? ?i?u khi?n LED
	PORT();
  fc:	0e 94 68 00 	call	0xd0	; 0xd0 <PORT>

00000100 <__tablejump2__>:
 100:	ee 0f       	add	r30, r30
 102:	ff 1f       	adc	r31, r31
 104:	05 90       	lpm	r0, Z+
 106:	f4 91       	lpm	r31, Z
 108:	e0 2d       	mov	r30, r0
 10a:	09 94       	ijmp

0000010c <_exit>:
 10c:	f8 94       	cli

0000010e <__stop_program>:
 10e:	ff cf       	rjmp	.-2      	; 0x10e <__stop_program>
